{"version":3,"sources":["components/StartPage/StartPage.js","components/Modalpopup/Modalpopup.js","components/Navigation/Navigation.js","components/Item/Item.js","components/ButtonName/ButtonName.js","components/Login/Login.js","components/Register/Register.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["StartPage","useState","transitionClass","setTransitionClass","visibility","setVisibility","className","roll","onClick","Modalpopup","show","onChange","handleClose","saveModalNewValue","Modal","Header","Title","Body","event","type","placeholder","aria-label","aria-describedby","Footer","Button","id","Navigation","onRouteChange","changeLogStateToFalse","isLogedIn","loadUser","user","initialUser","name","email","container","joined","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","fetch","method","headers","body","JSON","stringify","then","response","json","Item","handleShow","save","label","modalInput","lineThrough","checkIcon","uncheckIcon","index","deleteItem","style","display","role","aria-hidden","textDecoration","min","max","ButtonName","deleteListButton","windowWidth","DropdownItem","Login","changeLogStateToTrue","validated","setValidated","loginEmail","setLoginEmail","loginPass","setLoginPass","Form","noValidate","onSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","Group","controlId","Label","Control","required","target","value","Feedback","variant","password","console","log","parsedContainer","map","element","parse","window","alert","Register","registerName","setRegisterName","registerEmail","setRegisterEmail","registerPass","setRegisterPass","App","setState","length","setActiveButtonIdAndName","route","updateWindowDimensions","innerWidth","onInputchange","inputAddNewButton","onInputChangeNewItem","inputAddNewItem","plusNewButton","state","push","listItems","splice","activeButtonName","activeButtonId","buttonName","addNewItem","item","setItemStyle","modalOnInputChange","activeItemId","inputValuesNewItem","this","addEventListener","removeEventListener","buttonsToBeRender","key","itemToBeRender","DropdownButton","title","size","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6f611d7.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport './StartPage.css';\r\n\r\n\r\n\r\nconst StartPage = () => {\r\n    const [transitionClass, setTransitionClass] = useState('');\r\n    const [visibility, setVisibility] = useState('');\r\n\r\n\r\n    const fireTransitionAndVisibility = () => {\r\n        setTransitionClass('transitionForColFullWidth');\r\n        setVisibility('hidden');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`col-full-width ${transitionClass}`}>\r\n                <div className=\"form\">\r\n                    <h1><span className=\"changedStyle\">Do things</span> The Right Way</h1>\r\n                    <div className=\"form-group-1\">\r\n\r\n                        <div className={`newList btn-outline-warning ${visibility}`} roll=\"button\" onClick={fireTransitionAndVisibility}>\r\n                            <i className=\"fas fa-th-list\"></i>\r\n                            <h5 className=\"font-weight-light \">Start Planning</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default StartPage;","import React from 'react';\r\nimport '../Modalpopup/Modalpopup.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nconst Modalpopup = ({ show, onChange, handleClose, saveModalNewValue }) => {\r\n    return (\r\n        \r\n        < Modal show = { show } >\r\n            <Modal.Header className=\"modal-header text-white\">\r\n                <Modal.Title>Edit Entry</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <input\r\n                    onChange={(event)=>onChange(event)}\r\n                    type=\"text\"\r\n                    className=\"form-control inputForModal\"\r\n                    placeholder=\"Your edit in here\"\r\n                    aria-label=\"edit\"\r\n                    aria-describedby=\"edit an existing entry field\" />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button\r\n                    id=\"modalCancelButton\"\r\n                    className=\"btn text-white\"\r\n                    onClick={(event) => handleClose(event)}>Close</Button>\r\n                <Button\r\n                    onClick={() =>saveModalNewValue()}\r\n                    id=\"modalSaveButton\"\r\n                    className=\"btn bg-warning text-white\">Save</Button>\r\n            </Modal.Footer>\r\n            </Modal >\r\n  \r\n    );\r\n}\r\n\r\n\r\nexport default Modalpopup;\r\n","import React, { Fragment } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange,changeLogStateToFalse, isLogedIn,loadUser,user}) => {\r\nconst initialUser = {\r\n    name: '',\r\n    email:'',\r\n    container: [],\r\n    joined: ''\r\n}\r\nconst saveButtonFunctionalities = ()=>{\r\n    // onRouteChange('login');\r\n    // changeLogStateToFalse();\r\n    // loadUser(initialUser);\r\n    fetch('https://limitless-atoll-58976.herokuapp.com/save',{\r\n        method:'put',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            email:user.email,\r\n            container:user.container\r\n        })\r\n    })\r\n    .then(response=>response.json());\r\n}\r\nconst LogOutButtonFunctionalities = ()=>{\r\n    onRouteChange('login');\r\n    changeLogStateToFalse();\r\n    loadUser(initialUser);\r\n    fetch('https://limitless-atoll-58976.herokuapp.com/logout',{\r\n        method:'put',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            email:user.email,\r\n            container:user.container\r\n        })\r\n    })\r\n    .then(response=>response.json());\r\n}\r\n\r\n    if(!isLogedIn){\r\n        return (\r\n            <Fragment>\r\n                <header className=\"col\">\r\n                    <Navbar expand=\"lg\" className=\"navbar-dark\">\r\n                        <Navbar.Brand href=\"#home\" onClick={()=>onRouteChange('home')}>\r\n                            <h1 className=\"navbar-brand\"><span className=\"changedStyle\">Do things</span> The Right Way</h1>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <li className=\"nav-item item1 ml-auto \">\r\n                                    <button type=\"button\" id=\"buttonForAddingToDoList\" className=\"loginButton btn btn-outline-secondary wraper\" onClick={()=>onRouteChange('login')}>\r\n                                        <h5 className=\"font-weight-light\">Log In</h5>\r\n                                    </button>\r\n                                    <button type=\"button\" id=\"buttonForAddingToDoList\" className=\"registerButton btn btn-outline-secondary wraper\" onClick={()=>onRouteChange('register')}>\r\n                                        <h5 className=\"font-weight-light\">Register</h5>\r\n                                    </button>\r\n                                </li>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </header>\r\n            </Fragment>\r\n        );\r\n\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <Fragment>\r\n                <header className=\"col\">\r\n                    <Navbar expand=\"lg\" className=\"navbar-dark\">\r\n                        <Navbar.Brand href=\"#home\">\r\n                            <h1 className=\"navbar-brand\"><span className=\"changedStyle\">Do things</span> The Right Way</h1>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                                <li className=\"nav-item item1 ml-auto \">\r\n                                    <h5 className=\"welcome\"> Welcome {`${user.name}`}</h5>\r\n                                    <button type=\"button\" className=\"saveExitButton btn btn-outline-secondary wraper\" onClick={()=>saveButtonFunctionalities()}>\r\n                                        <h5>Save</h5>\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"saveExitButton btn btn-outline-secondary wraper\" onClick={()=>LogOutButtonFunctionalities()}>\r\n                                        <h5>Log out</h5>\r\n                                    </button>\r\n                                </li>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </header>\r\n            </Fragment>\r\n    \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport '../Item/Item.css'\r\n\r\nconst Item = ({ handleShow, \r\n                save, \r\n                label, \r\n                modalInput, \r\n                onClick , \r\n                lineThrough, \r\n                checkIcon,\r\n                uncheckIcon,\r\n                index,\r\n                deleteItem}) => {\r\n\r\n\r\n\r\n    return (\r\n        <li className=\"li-item\">\r\n            <div className=\"list-component text-secondary\">\r\n                <div className=\"check-list\">\r\n                <i className=\"far fa-circle\" style ={{display:uncheckIcon}} role=\"button\" onClick={onClick} aria-hidden=\"true\"></i>\r\n                <i className=\"far fa-check-circle text-success\" style ={{display:checkIcon}} role=\"button\" onClick={onClick} aria-hidden=\"true\"></i>\r\n                    <p className=\"p-text\" style={{textDecoration: lineThrough}}>\r\n                        {\r\n                            !save ? modalInput : label\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"edit-list\">\r\n                    <i id={label} className=\"far fa-times-circle text-danger\"  role=\"button\" onClick={deleteItem} aria-hidden=\"true\"></i>\r\n                    <i id={index} className=\"far fa-edit text-info\" role=\"button\" onClick={(event)=>handleShow(event)} aria-hidden=\"true\"></i>\r\n                    <input className=\"quantity\" type=\"number\" aria-label=\"Insert a number\" name=\"quantity\" min=\"1\" max=\"20\" aria-describedby=\"number of items of the same kind\" placeholder=\"1\" />\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, { Fragment } from 'react';\r\nimport './ButtonName.css';\r\nimport DropdownItem from 'react-bootstrap/DropdownItem';\r\n\r\n\r\nconst ButtonName = ({ onClick, label, deleteListButton, windowWidth}) => {\r\n\r\n    const liItem = () => {\r\n\r\n        if (windowWidth < 992) {\r\n            return (\r\n                <DropdownItem className=\"newListLi\" onClick={onClick}>{label}<i className=\"far fa-trash-alt\" role=\"button\" onClick={deleteListButton}></i></DropdownItem>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <li className=\"newListLi\"  >\r\n                    <button onClick={onClick} type=\"button\" className=\"btn btn-outline-warning btn-lg btn-block capitalize button-color-orange\">{label}</button>\r\n                    <i className=\"far fa-trash-alt\" role=\"button\" onClick={deleteListButton}></i>\r\n                </li >\r\n\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            {liItem()}\r\n        </Fragment>\r\n    );\r\n\r\n}\r\nexport default ButtonName;\r\n\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Login = ({ onRouteChange, changeLogStateToTrue, loadUser}) => {\r\n\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPass, setLoginPass] = useState('');\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const onEmailChange = (event) => {\r\n        setLoginEmail(event.target.value);\r\n    }\r\n    const onPassChange = (event) => {\r\n        setLoginPass(event.target.value);\r\n    }\r\n\r\n    const onLogInClick = (event) => {\r\n        fetch('https://limitless-atoll-58976.herokuapp.com/login', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: loginEmail,\r\n                password: loginPass\r\n            })\r\n        })\r\n            .then(response=>response.json())\r\n            .then(user=>{\r\n                console.log(user);\r\n                if(user.id){\r\n                    //Because the response of the \"user.container\" was a String and not a Json I had to Parse the \"user.container\"\r\n                   let parsedContainer =  user.container.map((element)=>{\r\n                        let parsedElement = JSON.parse(element);\r\n                        return parsedElement;\r\n                    });\r\n                    user.container = parsedContainer;\r\n                    //=====================================================================\r\n                    console.log(user);\r\n                    onRouteChange('home');\r\n                    changeLogStateToTrue();\r\n                    loadUser(user);\r\n                }\r\n                else{\r\n                    window.alert('Wrong Credentials');\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-3\">\r\n                    <Form className=\"login-form justify-content-center\" noValidate validated={validated} onSubmit={handleSubmit} >\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" required onChange={onEmailChange} />\r\n                            <Form.Control.Feedback type=\"invalid\">Please type an email address</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"valid\">Looks Good</Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" required onChange={onPassChange} />\r\n                            <Form.Control.Feedback type=\"invalid\">Please type your password</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"valid\">Looks Good</Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={onLogInClick} >\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport './Register.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Register = ({onRouteChange, loadUser, changeLogStateToTrue}) => {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [registerName, setRegisterName] = useState('');\r\n    const [registerEmail, setRegisterEmail] = useState('');\r\n    const [registerPass, setRegisterPass] = useState('');\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setRegisterName(event.target.value);\r\n    }\r\n    const onEmailChange = (event) => {\r\n        setRegisterEmail(event.target.value);\r\n    }\r\n    const onPassChange = (event) => {\r\n        setRegisterPass(event.target.value);\r\n    }\r\n\r\n    const onRegisterClick = ()=>{\r\n        fetch('https://limitless-atoll-58976.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                name:registerName,\r\n                email: registerEmail,\r\n                password: registerPass\r\n            })\r\n        })\r\n            .then(response=>response.json())\r\n            .then(user=>{\r\n                if(user.name){\r\n                    loadUser(user);\r\n                    onRouteChange('home');\r\n                    changeLogStateToTrue();\r\n                }\r\n            })\r\n       }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-3\">\r\n                    <Form className=\"register-form justify-content-center\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                            <Form.Label className=\"label\">Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Name\" required onChange={onNameChange}/>\r\n                            <Form.Control.Feedback type=\"invalid\">Please type your name</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"valid\">Looks Good</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" required onChange={onEmailChange} />\r\n                            <Form.Control.Feedback type=\"invalid\">Please type an email address</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"valid\">Looks Good</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" required onChange={onPassChange} />\r\n                            <Form.Control.Feedback type=\"invalid\">Please type your password</Form.Control.Feedback>\r\n                            <Form.Control.Feedback type=\"valid\">Looks Good</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={onRegisterClick} >\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Register;","import React, { Component, Fragment } from 'react';\nimport StartPage from '../../components/StartPage/StartPage';\nimport Modalpopup from '../../components/Modalpopup/Modalpopup';\nimport Navigation from '../../components/Navigation/Navigation';\nimport '../App/App.css';\nimport Item from \"../../components/Item/Item\";\nimport ButtonName from \"../../components/ButtonName/ButtonName\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Login from '../../components/Login/Login';\nimport Register from '../../components/Register/Register';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'home',\n      isLogedIn: false,\n      windowWidth: 0,\n      activeButtonId: 0,\n      activeButtonName: '',\n      activeItemId: 0,\n      inputAddNewButton: '',\n      inputAddNewItem: '',\n      save: true,\n      modalInput: '',\n      show: false,\n      inputValuesNewItem: [],\n      user: {\n        id:null,\n        name: '',\n        email: '',\n        container: [\n          // {\n          //   id: \"\",\n          //   listItems: [\n          //     {\n          //       item: itemvalue,\n          //       lineThrough: null,\n          //       uncheckIcon: null,\n          //       checkIcon: \"none\",\n          //       display: \"\"\n          //     }\n          //   ]\n          // }\n        ],\n        joined: ''\n      }\n    };\n  }\n\n\n  loadUser = (user) => {\n    this.setState({\n      user: {\n        name: user.name,\n        email: user.email,\n        container: user.container,\n        joined: user.joined\n      }\n    });\n    //The \"activeButtonId\" and \"activeButtonName\" are set automaticaly to the values from container[0] when the user is loaded\n    // if the container is not empty\n    if(user.container.length>0){\n      this.setActiveButtonIdAndName(0);\n    }\n\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  }\n\n  changeLogStateToFalse = () => {\n      this.setState({ isLogedIn: false });\n  }\n  changeLogStateToTrue = () => {\n      this.setState({ isLogedIn: true });\n  }\n\n\n  // Checking Window innerWidth\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ windowWidth: window.innerWidth });\n  }\n\n\n\n\n  // Adds name for the BUTTON\n  onInputchange = (event) => {\n    this.setState({ inputAddNewButton: event.target.value });\n\n  }\n\n  onInputChangeNewItem = (event) => {\n    this.setState({ inputAddNewItem: event.target.value });\n  }\n\n  // Adds new List Button\n  plusNewButton = (event) => {\n    event.preventDefault();\n    if (this.state.inputAddNewButton === \"\") {\n      return\n    }\n\n    let user = this.state.user;\n    user.container.push({ id: this.state.inputAddNewButton, listItems: [] });\n\n    this.setState({\n      user: user,\n      inputAddNewButton: \"\"\n    })\n  }\n\n   // Delete List Button by clicking the Garbage Bin Icon \n   deleteListButton = (index) => {\n    let user = this.state.user;\n    user.container.splice(index,1);\n    //After deleting a List button - the \"activeButtonId\" and \"activeButtonName\" are set to the values from the first element in the container[]\n    if(user.container.length>0){\n      const activeButtonName = user.container[0].id;\n      this.setState({\n        activeButtonId:0,\n        activeButtonName:activeButtonName});\n    }\n    else{\n      this.setState({\n        activeButtonName:\"\"});\n    }\n    \n    this.setState({ \n      user: user,\n     });\n  }\n  \n\n  // Sets new Button Id and Name\n  setActiveButtonIdAndName = (index) => {\n    let user = this.state.user;\n    const buttonName = user.container[index].id;\n    this.setState({ activeButtonId: index, activeButtonName: buttonName })\n  }\n\n  // Adds new Item to the created list\n  addNewItem = (event) => {\n    event.preventDefault();\n    if (this.state.inputAddNewItem === \"\" || this.state.activeButtonName === \"\") {\n      return\n    }\n    let user = this.state.user;\n    user.container[this.state.activeButtonId]\n      .listItems\n      .push({\n        item: this.state.inputAddNewItem,\n        lineThrough: null,\n        uncheckIcon: null,\n        checkIcon: \"none\"\n      });\n\n    this.setState({\n      user: user,\n      inputAddNewItem: \"\"\n    })\n  }\n\n \n\n  // Delete item functionality by clicking the Delete Icon for the Items\n  deleteItem = (index) => {\n    let user = this.state.user;\n    user.container[this.state.activeButtonId].listItems.splice(index,1);\n    this.setState({ user: user });\n  }\n\n\n  // Sets the visibility of \"check\" and \"unchecked\" icons in the item li\n  setItemStyle = (index) => {\n    let user = this.state.user;\n\n    if (user.container[this.state.activeButtonId].listItems[index].lineThrough === null && user.container[this.state.activeButtonId].listItems[index].checkIcon === \"none\") {\n      user.container[this.state.activeButtonId].listItems[index].lineThrough = \"line-through\";\n      user.container[this.state.activeButtonId].listItems[index].uncheckIcon = \"none\";\n      user.container[this.state.activeButtonId].listItems[index].checkIcon = null;\n    } else {\n      user.container[this.state.activeButtonId].listItems[index].lineThrough = null;\n      user.container[this.state.activeButtonId].listItems[index].checkIcon = \"none\";\n      user.container[this.state.activeButtonId].listItems[index].uncheckIcon = null;\n    }\n    this.setState({ user: user })\n  }\n\n  //==========MODAL FUNCTIONALITY====================\n\n  modalOnInputChange = (event) => {\n    this.setState({ modalInput: event.target.value });\n  }\n\n  saveModalNewValue = () => {\n    // const container = [...this.state.container];\n    let user = this.state.user;\n    user.container[this.state.activeButtonId].listItems[this.state.activeItemId].item = this.state.modalInput;\n\n    this.setState({ show: false });\n    // this.setState({ container: container });\n    this.setState({ user: user });\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n    this.setState({ show: false });\n\n  }\n\n  handleShow = (event) => {\n    this.setState({\n      show: true,\n      save: true,\n      activeItemId: event.target.id\n    });\n  }\n  // ====================================\n\n\n\n\n  render() {\n\n    // Sets the moment when the \"dropdownButton\" is visible according to the size of the window\n    const dropdownButtonVisibility = () => {\n      if (this.state.windowWidth < 992) {\n        return null;\n      }\n      else {\n        return \"hidden\"\n      }\n    }\n    // Sets the moment when the \"ul\" is visible according to the size of the window\n    const ulVisibility = () => {\n      if (this.state.windowWidth < 992) {\n        return \"hidden\"\n      }\n      else {\n        return null\n      }\n    }\n\n\n\n\n\n    // Returns the ButtonName component\n    let user = this.state.user;\n    let buttonsToBeRender = null;\n    if ( user.container.length !== 0) {\n      buttonsToBeRender = (user.container.map((value, index) => {\n        return (<ButtonName\n          windowWidth={this.state.windowWidth}\n          onClick={() => this.setActiveButtonIdAndName(index)}\n          deleteListButton = {()=>this.deleteListButton(index)}\n          key={`${value}${index}`}\n          label={value.id}\n        />)\n      }))\n    }\n\n\n    // Returns the Item component\n    let itemToBeRender = null;\n    if (user.container.length !== 0) {\n      itemToBeRender = (user.container[this.state.activeButtonId].listItems.map((value, index) => {\n        return (<Item\n          onClick={() => this.setItemStyle(index)}\n          key={`${value}${index}`}\n          index={index}\n          label={value.item}\n          handleShow={(event) => this.handleShow(event)}\n          save={this.state.save}\n          modalInput={this.state.modalInput}\n          lineThrough={value.lineThrough}\n          checkIcon={value.checkIcon}\n          uncheckIcon={value.uncheckIcon}\n          deleteItem={() => this.deleteItem(index)} />)\n      }))\n    }\n\n\n    return (\n      <Fragment>\n        <Modalpopup show={this.state.show}\n          onChange={(event) => this.modalOnInputChange(event)}\n          handleClose={() => this.handleClose()}\n          saveModalNewValue={() => this.saveModalNewValue()} />\n        < StartPage />\n\n        <div className=\"container-fluid border border-light\">\n          <div className=\"row\">\n            <Navigation onRouteChange={this.onRouteChange}\n             changeLogStateToFalse={this.changeLogStateToFalse}\n              isLogedIn={this.state.isLogedIn} \n              loadUser = {this.loadUser}\n              user = {this.state.user}/>\n          </div>{/*End Of Row*/}\n\n          {this.state.route === \"login\"\n            ? <Login onRouteChange={this.onRouteChange} loadUser={this.loadUser} changeLogStateToTrue={this.changeLogStateToTrue} />\n            : this.state.route === \"home\" ?\n              <div className=\"row\">\n                <div className=\"col-lg-4 listSummarySection\">\n                  <form className=\"form-inline formWraper\" onSubmit={(event) => this.plusNewButton(event)}>\n                    <input\n                      onChange={this.onInputchange}\n                      value={this.state.inputAddNewButton}\n                      type=\"text\"\n                      id=\"inputNewListItem\"\n                      className=\"form-control\"\n                      placeholder=\"Name Your List\"\n                      aria-label=\"Insert text\"\n                      aria-describedby=\"edit an existing entry field\" />\n                    <button\n                      onClick={(event) => this.plusNewButton(event)}\n                      type=\"button\"\n                      id=\"plusButton\"\n                      className=\"btn-warning\">+</button>\n                  </form>\n\n                  <div className=\"myListSummary-wraper\">\n                    <DropdownButton\n                      id=\"dropdown-basic-button\"\n                      className={`m-auto capitalize ${dropdownButtonVisibility()}`}\n                      title=\"All Your Lists\"\n                      variant=\"Warning\"\n                      size=\"lg\">\n                      {buttonsToBeRender}\n                    </DropdownButton>\n\n                    <ul className={`myListSummary ${ulVisibility()}`}>\n                      {buttonsToBeRender}\n                    </ul>\n                  </div>\n                </div>{/*End Of Col-lg-4*/}\n\n                <div className=\"col-lg-8 list-content\">\n                  <form className=\"taskForm\" onSubmit={(event) => this.addNewItem(event)}>\n                    <div className=\"component1\">\n                      <input\n                        onChange={this.onInputChangeNewItem}\n                        value={this.state.inputAddNewItem}\n                        type=\"text\"\n                        className=\"form-control shadow input-new-line\"\n                        placeholder=\"New item\"\n                        aria-label=\"Insert text\"\n                        aria-describedby=\"edit an existing entry field\" />\n                    </div>\n                    <div\n                      onClick={(event) => this.addNewItem(event)}\n                      className=\"component2\"\n                      role=\"button\">\n                      <i className=\"far fa-plus-square\" aria-hidden=\"true\"></i>\n                      <h5 className=\"addTask\">Add new item</h5>\n                    </div>\n                  </form>\n                  <ul className=\"todo-list\">\n                    <h3 className=\"todo-name\">{this.state.activeButtonName}</h3>\n\n                    {itemToBeRender}\n\n                  </ul>\n                </div>{/*End Of Col*/}\n              </div>/*End Of Row*/\n\n              : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} changeLogStateToTrue={this.changeLogStateToTrue} />\n          }\n        </div>{/*End Of Container Fluid*/}\n      </Fragment >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}